
<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1">
<title>{{ title | truncate(59) }}</title>
<meta name="description" content="{{ short_desc | truncate(135) }}">
<meta name="generator" content="Mayhem Maker {{ app_version }} ({{ build_stamp }})">
<link rel="canonical" href="{{ site_url }}/videos/{{ slug }}.html">
<link rel="icon" href="/images/favicon.ico">

<!-- Preconnect / DNS -->
<link rel="preconnect" href="https://www.youtube.com">
<link rel="preconnect" href="https://i.ytimg.com">
<link rel="dns-prefetch" href="https://www.youtube.com">
<link rel="dns-prefetch" href="https://i.ytimg.com">

<!-- Open Graph -->
<meta property="og:type" content="video.other">
<meta property="og:title" content="{{ title | truncate(55) }}">
<meta property="og:site_name" content="Martocci Mayhem">
<meta property="og:description" content="{{ short_desc | truncate(60) }}">
<meta property="og:url" content="{{ site_url }}/videos/{{ slug }}.html">
<meta property="og:image" content="https://i.ytimg.com/vi/{{ video_id }}/hqdefault.jpg">

<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:title" content="{{ title | truncate(50) }}">
<meta name="twitter:site" content="@JasonMartocci">
<meta name="twitter:description" content="{{ short_desc | truncate(120) }}">
<meta name="twitter:image:alt" content="Martocci Mayhem {{ title }}">
<meta name="twitter:image" content="https://i.ytimg.com/vi/{{ video_id }}/hqdefault.jpg">

<style>{% raw %}
  :root { color-scheme: dark; }
  * { box-sizing: border-box; }
  html, body { overflow-x: hidden; }
  body {
    margin: 0;
    font-family: ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, Arial, sans-serif;
    background: #0f0f0f; color: #fff;
    -webkit-text-size-adjust: 100%;
  }
  img, svg, video, canvas, iframe { display:block; }

  /* Header: logo left, H1 centered (no overlap on mobile) */
  header {
    position: relative;
    display:flex; align-items:center; gap:10px; padding:10px 12px;
    border-bottom:1px solid #222; background:#0f0f0f;
  }
  header .brand {
    display:flex; align-items:center; gap:8px; color:#fff; text-decoration:none; font-weight:700; z-index:2;
  }
  header .brand img { width:28px; height:28px; }
  header .page-title {
    position:absolute; left:50%; transform:translateX(-50%);
    margin:0; font-weight:800; color:#eee;
    font-size:clamp(1rem, 2.2vw, 1.35rem); line-height:1.2; text-align:center;
  }
  @media (max-width:560px){
    header { flex-direction:column; align-items:flex-start; }
    header .page-title { position:static; transform:none; width:100%; text-align:center; margin-top:2px; }
  }

  /* Full-width content */
  main {
    width:100%; margin:0; padding:clamp(12px, 2vw, 24px); max-width:none;
    display:grid; grid-template-columns:minmax(0, 2.6fr) minmax(280px, 1fr);
    gap:clamp(14px, 2vw, 28px);
  }
  @media (max-width:1024px) { main { grid-template-columns: 1fr; } }

  /* Video wrapper reserves height to prevent CLS */
  .video {
        position: relative;
        width: 100%;
        aspect-ratio: 16 / 9;
        overflow: hidden;
        border-radius: 10px;
        border: 1px solid #222;
        box-shadow: 0 0 0 1px #111 inset, 0 10px 25px rgba(0,0,0,.35);
        margin-bottom: 1rem; /* add this line */
    }

  .video iframe { position:absolute; inset:0; width:100%; height:100%; border:0; }
  @supports not (aspect-ratio: 16/9) {
    .video { height: 0; padding-top: 56.25%; }
    .video iframe { position:absolute; inset:0; width:100%; height:100%; }
  }

  .card { background:#111; border:1px solid #222; border-radius:12px; padding:clamp(12px,1.6vw,18px); }
  section .card + .card { margin-top: 16px; }

  .meta a { color:#bbb; margin-right:14px; text-decoration:none; border-bottom:1px dotted #444; }
  .meta a:hover { color:#fff; border-color:#3ea6ff; }
  a, .link { color:#3ea6ff; text-decoration:none; }

  .desc {
    color:#ddd;
    line-height:1.65;
    white-space:pre-wrap;
    overflow-wrap:break-word;
    word-break:normal;
  }

  /* make long links wrap without breaking ASCII art blocks */
  .desc a { word-break: break-all; }

  /* for box-drawing / ASCII lines */
  .desc pre.ascii {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    white-space: pre;         /* never wrap */
    overflow: auto;
    max-width: 100%;
    background:#0c0c0c;
    border:1px solid #222;
    border-radius:8px;
    padding:8px 10px;
    margin:8px 0;
  }

  details summary { cursor:pointer; }

  .block-title { font-weight:800; margin:.2rem 0 .6rem; }
  .subtle { color:#9aa; }

  /* Recommended uses the same grid card layout as index */
  .grid { display:grid; grid-template-columns: repeat(auto-fill, minmax(260px, 1fr)); gap:12px; }
  .rec-card { background:#111; border:1px solid #222; border-radius:12px; overflow:hidden; display:block; }
  .thumb { aspect-ratio:16/9; object-fit:cover; display:block; }
  @media (min-width:550px) { .thumb { width: 100%; } }
  .body { padding:10px 12px; }
  .title { font-weight:800; margin-bottom:6px; }
  .mini { color:#9aa; font-size:1rem; }
  .mini-meta { margin-top:6px; font-size:1rem; }

  footer { padding:16px; text-align:center; border-top:1px solid #222; color:#aaa }
{% endraw %}</style>

<!-- Organization + WebSite (sitewide graph) -->
<script type="application/ld+json">
{{ {
  "@context":"https://schema.org",
  "@graph":[
    {
      "@type":"Organization",
      "@id": site_url + "/#org",
      "name":"Martocci Mayhem",
      "url": site_url,
      "logo":{
        "@type":"ImageObject",
        "url": site_url + "/images/JasonMartocci_Logo.webp"
      },
      "sameAs":[
        "https://x.com/JasonMartocci",
        "https://www.tiktok.com/@JasonMartocci",
        "https://www.youtube.com/@JasonMartocci",
        "https://www.instagram.com/Jason.Martocci",
        "https://www.facebook.com/MartocciMayhem"
      ]
    },
    {
        "@type":"WebSite",
        "@id": site_url + "/#website",
        "url": site_url,
        "name":"Martocci Mayhem",
        "publisher":{"@id": site_url + "/#org"},
        "inLanguage":"en"

    }
  ]
} | tojson | replace("</","<\\/") | safe }}
</script>

<!-- VideoObject -->
<script type="application/ld+json">
{{ video_schema | tojson | replace("</","<\\/") | safe }}
</script>

<!-- WebPage (the actual watch page container) -->
<script type="application/ld+json">
{{ {
  "@context":"https://schema.org",
  "@type":"WebPage",
  "@id": site_url + "/videos/" + slug + ".html#webpage",
  "url": site_url + "/videos/" + slug + ".html",
  "name": title,
  "description": short_desc,
  "isPartOf": {"@id": site_url + "/#website"},
  "about": {"@id": site_url + "/#org"},
  "primaryImageOfPage": {
    "@type":"ImageObject",
    "url":"https://i.ytimg.com/vi/" ~ video_id ~ "/hqdefault.jpg"
  },
  "breadcrumb": {"@id": site_url + "/videos/" + slug + ".html#breadcrumb"},
  "datePublished": upload_date,
  "inLanguage": "en"
} | tojson | replace("</","<\\/") | safe }}
</script>

<!-- BreadcrumbList -->
<script type="application/ld+json">
{{ {
  "@context":"https://schema.org",
  "@type":"BreadcrumbList",
  "@id": site_url + "/videos/" + slug + ".html#breadcrumb",
  "itemListElement":[
    {"@type":"ListItem","position":1,"name":"Home","item": site_url},
    {"@type":"ListItem","position":2,"name": title,"item": site_url + "/videos/" + slug + ".html"}
  ]
} | tojson | replace("</","<\\/") | safe }}
</script>

<!-- FAQPage (only include if FAQs are visibly on the page) -->
{% if faq_schema %}
<script type="application/ld+json">
{{ faq_schema | tojson | replace("</","<\\/") | safe }}
</script>
{% endif %}
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('consent', 'default', {
    ad_storage: 'denied',
    analytics_storage: 'denied'
  });
</script>

<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-M23LKR14B1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-M23LKR14B1');
</script>
</head>
<body>
<header>
  <a class="brand" href="{{ site_url }}">
    <img src="/images/JasonMartocci_Logo.webp" width="28" height="28" alt="Logo">
    <span>Martocci Mayhem</span>
  </a>
  <h1 class="page-title">{{ title | truncate(60) }}</h1>
</header>

<main>
  <section>
    <!-- Title + Stats (above the video) -->
    <div class="card" id="video-meta">
        <h2 class="block-title" style="margin:0">{{ title }}</h2>

        <div class="meta" style="margin-top:8px; display:flex; gap:12px; flex-wrap:wrap;">
        <span>Views: {{ view_count }}</span>
        <span>Likes: {{ like_count }}</span>
        <span>
            Channel:
            <a href="https://www.youtube.com/@{{ channel_handle }}" target="_blank" rel="noopener">
            {{ channel_title or ("@" ~ channel_handle) }}
            </a>Subscribers: {{ subs_known and subscriber_count or "â€”" }}
        </span>
        </div>

        <p style="margin:.4rem 0 0">
        <a class="link" href="https://www.youtube.com/@{{ channel_handle }}?sub_confirmation=1" target="_blank" rel="noopener">Subscribe</a>
        &nbsp;|&nbsp;
        <a class="link" href="https://www.youtube.com/watch?v={{ video_id }}" target="_blank" rel="noopener">Watch on YouTube</a>
        </p>
    </div>

    <div class="card">
        <!-- PLAYER -->
        <div class="video" style="position:relative;width:100%;margin:auto;margin-bottom:12px;aspect-ratio:16/9;overflow:hidden;border-radius:10px;border:1px solid #222;box-shadow:0 0 0 1px #111 inset, 0 10px 25px rgba(0,0,0,.35);">
            <div id="player" role="region" aria-label="Video player: {{ title }}" style="position:absolute;inset:0;"></div>
        </div>
            <!-- CONTROLS (outside the .video box) -->
            <div id="player-controls" style="margin:12px auto 0;position:relative;z-index:1;">
            <div id="yt-controls" style="display:none;gap:8px;flex-wrap:wrap;">
                <button id="play"       type="button" aria-label="Play video">Play</button>
                <button id="pause"      type="button" aria-label="Pause video">Pause</button>
                <button id="mute"       type="button" aria-label="Mute video">Mute</button>
                <button id="unmute"     type="button" aria-label="Unmute video">Unmute</button>
                <button id="fullscreen" type="button" aria-label="Enter fullscreen">Fullscreen</button>
            </div>

            <!-- Fallback if API is blocked -->
            <div id="yt-fallback" style="display:none;margin-top:12px;">
                <a id="yt-link" href="https://www.youtube.com/watch?v={{ video_id }}" target="_blank" rel="noopener">Watch on YouTube</a>
            </div>
        </div>
        <!-- YouTube IFrame API -->
        <script src="https://www.youtube.com/iframe_api"></script>

        <script>
            const VIDEO_ID = "{{ video_id }}";
            const ORIGIN = (location.origin && location.origin.startsWith('http')) ? location.origin : "{{ site_url }}";
            let ytPlayer;

            function showFallback(){
                const fb = document.getElementById('yt-fallback');
                const ctrls = document.getElementById('yt-controls');
                if (ctrls) ctrls.style.display = 'none';
                if (fb) fb.style.display = 'block';
                const link = document.getElementById('yt-link');
                if (link) link.href = "https://www.youtube.com/watch?v=" + VIDEO_ID;
            }

            function setIframeA11yTitle(text) {
                const iframe = document.querySelector('#player iframe');
                if (!iframe) { setTimeout(() => setIframeA11yTitle(text), 60); return; }
                try {
                iframe.setAttribute('title', text);
                iframe.setAttribute('name', text);
                iframe.setAttribute('allowfullscreen', '');
                const allow = iframe.getAttribute('allow') || '';
                if (!/\bfullscreen\b/.test(allow)) {
                    iframe.setAttribute('allow', (allow ? allow + '; ' : '') + 'fullscreen');
                }
                iframe.setAttribute('loading', 'lazy');
                } catch(e) {}
            }

            function ensureFullscreenAllowed() {
                const iframe = document.querySelector('#player iframe');
                if (!iframe) return;
                iframe.setAttribute('allowfullscreen', '');
                const allow = iframe.getAttribute('allow') || '';
                if (!/\bfullscreen\b/.test(allow)) {
                iframe.setAttribute('allow', (allow ? allow + '; ' : '') + 'fullscreen');
                }
            }

            function setFSLabel(entering) {
                const fsBtn = document.getElementById('fullscreen');
                if (!fsBtn) return;
                fsBtn.textContent = entering ? 'Exit Fullscreen' : 'Fullscreen';
                fsBtn.setAttribute('aria-label', fsBtn.textContent);
            }
        </script>

        <script>
            function toggleFullscreen() {
                const el = document.querySelector('#player iframe') || document.getElementById('player');
                if (!el) return;

                const enter = () => {
                // ensure iframe is allowed to go fullscreen
                ensureFullscreenAllowed();
                if (el.requestFullscreen) return el.requestFullscreen();
                if (el.webkitRequestFullscreen) return el.webkitRequestFullscreen(); // Safari
                if (el.msRequestFullscreen) return el.msRequestFullscreen();         // old Edge
                return Promise.resolve();
                };

                const exit = () => {
                if (document.exitFullscreen) return document.exitFullscreen();
                if (document.webkitExitFullscreen) return document.webkitExitFullscreen(); // Safari
                if (document.msExitFullscreen) return document.msExitFullscreen();         // old Edge
                return Promise.resolve();
                };

                if (!document.fullscreenElement && !document.webkitFullscreenElement) {
                enter().then(() => setFSLabel(true)).catch(() => {});
                } else {
                exit().then(() => setFSLabel(false)).catch(() => {});
                }
            }
        </script>
        <script>
            // Keep the button label in sync if the user exits with ESC, etc.
            document.addEventListener('fullscreenchange', () => {
                setFSLabel(!!document.fullscreenElement);
            });

            // Wire button events once the player is ready
            function wireControls() {
                const play   = document.getElementById('play');
                const pause  = document.getElementById('pause');
                const mute   = document.getElementById('mute');
                const unmute = document.getElementById('unmute');
                const fs     = document.getElementById('fullscreen');

                if (play)   play.onclick   = () => ytPlayer && ytPlayer.playVideo();
                if (pause)  pause.onclick  = () => ytPlayer && ytPlayer.pauseVideo();
                if (mute)   mute.onclick   = () => ytPlayer && ytPlayer.mute();
                if (unmute) unmute.onclick = () => ytPlayer && ytPlayer.unMute();
                if (fs)     fs.onclick     = toggleFullscreen;
            }

            // Bootstrap the YouTube IFrame API
            window.onYouTubeIframeAPIReady = function () {
                try {
                ytPlayer = new YT.Player('player', {
                    host: 'https://www.youtube.com',
                    videoId: VIDEO_ID,
                    playerVars: {
                    enablejsapi: 1,
                    origin: ORIGIN,   // must match https://jasonmartocci.com in production
                    rel: 0,
                    modestbranding: 1,
                    playsinline: 1
                    },
                    events: {
                    onReady: function () {
                        setIframeA11yTitle('YouTube video: {{ title }}');
                        ensureFullscreenAllowed();
                        wireControls();
                        const ctrls = document.getElementById('yt-controls');
                        if (ctrls) ctrls.style.display = 'flex';
                        setFSLabel(false);
                    },
                    onError: function () {
                        showFallback();
                    }
                    }
                });
                } catch (e) {
                showFallback();
                }
            };
        </script> 
        <script>
            document.addEventListener('webkitfullscreenchange', () => {
                setFSLabel(!!(document.fullscreenElement || document.webkitFullscreenElement));
            });
        </script>
    </div>
    <!-- Description -->
    <div class="card">
      <h2 class="block-title">Description</h2>
      <div class="desc">{{ formatted_desc | safe }}</div>
    </div>

    <!-- FAQ (visual) -->
    {% if faqs and faqs|length > 0 %}
      <div class="card faq" id="faq">
        <h2 class="block-title">Frequently Asked Questions</h2>
        {% for q,a in faqs %}
          <details style="margin-bottom:.6rem; border:1px solid #222; border-radius:8px; background:#0c0c0c; padding:.4rem .8rem;">
            <summary>{{ q }}</summary>
            <div class="answer" style="padding:.6rem;color:#ccc">
              <div>{{ a|safe }}</div>
            </div>
          </details>
        {% endfor %}
      </div>
    {% endif %}

    <!-- Comments -->
    <div class="card">
      <h2 class="block-title">Comments</h2>
      <p class="subtle">Join the discussion on YouTube to see real-time comments, likes, and replies.</p>
      <p><a class="link" href="https://www.youtube.com/watch?v={{ video_id }}#comments" target="_blank" rel="noopener">Open comments on YouTube</a></p>
    </div>
  </section>

  <!-- Sidebar / Recommended -->
  <aside class="rec">
    <div class="card">
      <h2 class="block-title">Recommended Videos</h2>
      {% if related and related|length > 0 %}
      <div class="grid">
        {% for r in related %}
          <a class="rec-card" href="/videos/{{ r.slug }}.html">
            <img class="thumb" decoding="async" loading="lazy"
                 src="https://i.ytimg.com/vi/{{ r.video_id }}/hqdefault.jpg"
                 width="320" height="180"
                 alt="{{ r.title }}"
                 onerror="this.onerror=null;this.src='/images/default-thumbnail.png'">
            <div class="body">
              <div class="title">{{ r.title }}</div>
              <div class="mini">{{ r.desc | truncate(90) }}</div>
              <div class="mini-meta">Views: {{ r.view_count }}</div>
            </div>
          </a>
        {% endfor %}
      </div>
      {% else %}
        <div class="subtle">More suggestions coming soon.</div>
      {% endif %}
    </div>
  </aside>
</main>

<footer>
  Â© {{ current_year }} Martocci Mayhem Â·
  <a class="link" href="{{ site_url }}">All The Mayhem</a> Â·
  <a class="link" href="https://github.com/JasonMartocci" target="_blank" rel="noopener">GitHub</a>
</footer>
<!-- generated by Mayhem Maker v{{ app_version }} @ {{ build_stamp }}Z -->
</body></html>
